"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2462],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return p}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var a=r.createContext({}),s=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=s(e.components);return r.createElement(a.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=s(t),p=o,m=u["".concat(a,".").concat(p)]||u[p]||f[p]||i;return t?r.createElement(m,l(l({ref:n},d),{},{components:t})):r.createElement(m,l({ref:n},d))}));function p(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,l=new Array(i);l[0]=u;var c={};for(var a in n)hasOwnProperty.call(n,a)&&(c[a]=n[a]);c.originalType=e,c.mdxType="string"==typeof e?e:o,l[1]=c;for(var s=2;s<i;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8286:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return a},default:function(){return p},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return f}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),l=["components"],c={layout:"page",title:"Blending",parent:"Modifying Colors",nav_order:1},a="Blending",s={unversionedId:"modifying-colors/blending",id:"modifying-colors/blending",title:"Blending",description:"When blending two colors, the amount \u2208 [0,1] refers to the percentage the second color is blended with the first. In other words, 0 means 0% of the second color and 100% of the first while 1 means 100% of the second color and 0% of the first.",source:"@site/docs/modifying-colors/blending.md",sourceDirName:"modifying-colors",slug:"/modifying-colors/blending",permalink:"/chromaticity-color-utilities/docs/modifying-colors/blending",editUrl:"https://github.com/reiniiriarios/chromaticity-color-utilities/docs/docs/modifying-colors/blending.md",tags:[],version:"current",frontMatter:{layout:"page",title:"Blending",parent:"Modifying Colors",nav_order:1},sidebar:"tutorialSidebar",previous:{title:"Modifying Colors",permalink:"/chromaticity-color-utilities/docs/modifying-colors/"},next:{title:"Darken",permalink:"/chromaticity-color-utilities/docs/modifying-colors/darken"}},d={},f=[{value:"JavaScript",id:"javascript",level:2},{value:"TypeScript",id:"typescript",level:2}],u={toc:f};function p(e){var n=e.components,t=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"blending"},"Blending"),(0,i.kt)("p",null,"When blending two colors, the amount \u2208 ","[0,1]"," refers to the percentage the second color is blended with the first. In other words, 0 means 0% of the second color and 100% of the first while 1 means 100% of the second color and 0% of the first."),(0,i.kt)("p",null,"Blending methods include: ",(0,i.kt)("inlineCode",{parentName:"p"},"rgb"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"hsv")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},".modify('blend', {\n  with: color2,   // REQUIRED, can be any color of any type\n  amount: number, // optional, 0 - 1, defaults to 0.5\n  method: string, // optional, defaults to 'rgb'\n  round: boolean, // optional, defaults to true\n})\n")),(0,i.kt)("h2",{id:"javascript"},"JavaScript"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const Color = require('chromaticity-color-utilities')\n\nconst color1 = Color.from('rgb', [255, 0, 0]).modify('blend', {\n  with: Color.from('hex', '00ff00'),\n})\n// rgb { r: 128, g: 128, b: 0, a: 255, bitDepth: 8, max: 255 }\n\nconst color2 = Color.from('rgb', [255, 0, 0]).modify('blend', {\n  with: Color.from('hex', '00ff00'),\n  method: 'hsv',\n})\n// rgb { r: 255, g: 255, b: 0, a: 255, bitDepth: 8, max: 255 }\n\nconst color3 = Color.from('hex', 'ee5432')\n  .modify('blend', {\n    with: Color.from('rgb', [234, 100, 20, 64]),\n    amount: 1 / 3,\n  })\n  .to('hsv')\n// hsv { h: 15, s: 83, v: 93, a: 75 }\n")),(0,i.kt)("h2",{id:"typescript"},"TypeScript"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import Color, { colorTypes } from 'chromaticity-color-utilities'\n\nconst color1: colorTypes.rgb[] = Color.from('rgb', [255, 0, 0]).modify('blend', {\n  with: Color.from('hex', '00ff00'),\n})\n")))}p.isMDXComponent=!0}}]);