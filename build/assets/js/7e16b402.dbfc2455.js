"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8615],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return m}});var o=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function a(e,r){if(null==e)return{};var t,o,n=function(e,r){if(null==e)return{};var t,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=o.createContext({}),s=function(e){var r=o.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},p=function(e){var r=s(e.components);return o.createElement(l.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},f=o.forwardRef((function(e,r){var t=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),f=s(t),m=n,y=f["".concat(l,".").concat(m)]||f[m]||u[m]||i;return t?o.createElement(y,c(c({ref:r},p),{},{components:t})):o.createElement(y,c({ref:r},p))}));function m(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=t.length,c=new Array(i);c[0]=f;var a={};for(var l in r)hasOwnProperty.call(r,l)&&(a[l]=r[l]);a.originalType=e,a.mdxType="string"==typeof e?e:n,c[1]=a;for(var s=2;s<i;s++)c[s]=t[s];return o.createElement.apply(null,c)}return o.createElement.apply(null,t)}f.displayName="MDXCreateElement"},4097:function(e,r,t){t.r(r),t.d(r,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return u}});var o=t(7462),n=t(3366),i=(t(7294),t(3905)),c=["components"],a={title:"Hexidecimal",sidebar_position:2},l="Hexidecimal",s={unversionedId:"color-types/hex",id:"color-types/hex",title:"Hexidecimal",description:"May use string or numerical value. Strings are case-insensitive. Short form or long form may be used. # ignored if present.",source:"@site/docs/color-types/hex.md",sourceDirName:"color-types",slug:"/color-types/hex",permalink:"/chromaticity-color-utilities/docs/color-types/hex",editUrl:"https://github.com/reiniiriarios/chromaticity-color-utilities/docs/docs/color-types/hex.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Hexidecimal",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"RGB",permalink:"/chromaticity-color-utilities/docs/color-types/rgb"},next:{title:"Rec. 709 RGB",permalink:"/chromaticity-color-utilities/docs/color-types/rec709"}},p={},u=[{value:"JavaScript",id:"javascript",level:2},{value:"TypeScript",id:"typescript",level:2}],f={toc:u};function m(e){var r=e.components,t=(0,n.Z)(e,c);return(0,i.kt)("wrapper",(0,o.Z)({},f,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"hexidecimal"},"Hexidecimal"),(0,i.kt)("p",null,"May use string or numerical value. Strings are case-insensitive. Short form or long form may be used. # ignored if present."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"Color.from('hex', hex: string | number)\n\n.to('hex')\n")),(0,i.kt)("h2",{id:"javascript"},"JavaScript"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const Color = require('chromaticity-color-utilities')\n\nconst color1 = Color.from('hex', 'ff00ff')\nconst color2 = Color.from('hex', '#FF00FF')\nconst color3 = Color.from('hex', 0xff00ff)\n\nconst color4 = color2.to('hex')\n")),(0,i.kt)("h2",{id:"typescript"},"TypeScript"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import Color, { colorTypes } from 'chromaticity-color-utilities'\n\nconst c: colorTypes.hex = Color.from('hex', 'ff00ff')\n")))}m.isMDXComponent=!0}}]);