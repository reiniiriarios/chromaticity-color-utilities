"use strict";(self.webpackChunkchromaticity_color_utilities_documentation=self.webpackChunkchromaticity_color_utilities_documentation||[]).push([[964],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(n),u=a,h=m["".concat(l,".").concat(u)]||m[u]||b[u]||o;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2690:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return b}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],c={title:"Tint & Shade Scales",sidebar_position:6},l="Tint & Shade Scales",s={unversionedId:"color-schemes/tint-and-shade",id:"color-schemes/tint-and-shade",title:"Tint & Shade Scales",description:"The total number of colors in the scheme will be colors * 2 + 1, including the original color.",source:"@site/docs/color-schemes/tint-and-shade.md",sourceDirName:"color-schemes",slug:"/color-schemes/tint-and-shade",permalink:"/chromaticity-color-utilities/docs/color-schemes/tint-and-shade",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Tint & Shade Scales",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Shade Scales",permalink:"/chromaticity-color-utilities/docs/color-schemes/shade"},next:{title:"Gradient Scales",permalink:"/chromaticity-color-utilities/docs/color-schemes/gradients"}},p={},b=[{value:"JavaScript",id:"javascript",level:2},{value:"TypeScript",id:"typescript",level:2}],m={toc:b};function u(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"tint--shade-scales"},"Tint & Shade Scales"),(0,o.kt)("p",null,"The total number of colors in the scheme will be ",(0,o.kt)("inlineCode",{parentName:"p"},"colors * 2 + 1"),", including the original color."),(0,o.kt)("p",null,"Either include ",(0,o.kt)("inlineCode",{parentName:"p"},"distance")," OR ",(0,o.kt)("inlineCode",{parentName:"p"},"distanceToWhite")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"distanceToBlack"),". If you only include distance it will calculate distance to the nearest bound (black or white) and use that as measure for the other direction."),(0,o.kt)("p",null,"Method can be one of: ",(0,o.kt)("inlineCode",{parentName:"p"},"rgb"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"rgb2"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"hsl"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"hsv"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"hsi"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},"hsp"),". Each will produce a different gradient. ",(0,o.kt)("inlineCode",{parentName:"p"},"rgb")," modifies each r, g, and b value by the same amount, while ",(0,o.kt)("inlineCode",{parentName:"p"},"rgb2")," scales each value evenly."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},".scheme('tintshade',{\n  colors: number,          // REQUIRED, number of colors in each direction from source color\n  method: string,          // optional, defaults to hsl\n  distance: number,        // optional, 0-1, defaults to 1 OR\n  distanceToWhite: number, // optional, 0-1, defaults to 1\n  distanceToBlack: number, // optional, 0-1, defaults to 1\n  round: boolean           // optional, defaults to true\n})\n")),(0,o.kt)("h2",{id:"javascript"},"JavaScript"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const Color = require('chromaticity-color-utilities')\n\nconst scheme1 = Color.from('rgb', [100, 0, 100]).scheme('tintshade', {\n  colors: 3,\n})\n// [\n//   rgb { r: 0, g: 0, b: 0, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 33, g: 0, b: 33, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 67, g: 0, b: 67, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 100, g: 0, b: 100, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 133, g: 0, b: 133, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 167, g: 0, b: 167, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 200, g: 0, b: 200, a: 255, bitDepth: 8, max: 255 }\n// ]\nconst scheme2 = Color.from('rgb', [200, 100, 200]).scheme('tintshade', {\n  colors: 3,\n})\n// [\n//   rgb { r: 66, g: 24, b: 66, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 118, g: 42, b: 118, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 170, g: 60, b: 170, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 200, g: 100, b: 200, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 218, g: 152, b: 218, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 237, g: 203, b: 237, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 255, g: 255, b: 255, a: 255, bitDepth: 8, max: 255 }\n// ]\nconst scheme4 = Color.from('rgb', [200, 100, 200]).scheme('tintshade', {\n  colors: 3,\n  distance: 0.5,\n})\n// [\n//   rgb { r: 144, g: 51, b: 144, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 170, g: 60, b: 170, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 191, g: 74, b: 191, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 200, g: 100, b: 200, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 209, g: 126, b: 209, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 218, g: 152, b: 218, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 227, g: 178, b: 227, a: 255, bitDepth: 8, max: 255 }\n// ]\nconst scheme5 = Color.from('rgb', [200, 100, 200]).scheme('tintshade', {\n  colors: 3,\n  distanceToWhite: 1,\n  distanceToBlack: 1,\n})\n// [\n//   rgb { r: 0, g: 0, b: 0, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 74, g: 26, b: 74, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 148, g: 52, b: 148, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 200, g: 100, b: 200, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 218, g: 152, b: 218, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 237, g: 203, b: 237, a: 255, bitDepth: 8, max: 255 },\n//   rgb { r: 255, g: 255, b: 255, a: 255, bitDepth: 8, max: 255 }\n// ]\n")),(0,o.kt)("h2",{id:"typescript"},"TypeScript"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import Color, { colorTypes } from 'chromaticity-color-utilities'\n\nconst scheme1: colorTypes.rgb[] = Color.from('rgb', [100, 0, 100]).scheme(\n  'tintshade',\n  {\n    colors: 3,\n  }\n)\n")))}u.isMDXComponent=!0}}]);